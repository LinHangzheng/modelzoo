# GPT-NEOX 2.7B model
# Based on https://github.com/EleutherAI/gpt-neox/blob/main/configs/2-7B.yml
train_input:
    data_processor: "GptHDF5DataProcessor"
    data_dir:
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/0/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/1/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/2/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/3/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/4/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/5/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/6/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/7/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/8/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/9/"
    vocab_size: 50277
    max_sequence_length: 2048
    batch_size: 85
    shuffle: True
    shuffle_seed: 1337
    num_workers: 8
    prefetch_factor: 10
    persistent_workers: True # Important to avoid seeding at each epoch

eval_input:
    data_processor: "GptHDF5DataProcessor"
    data_dir: "./language/datasets/pile_original/hdf5_dataset/val_neox_msl2048/"
    vocab_size: 50277
    max_sequence_length: 2048
    batch_size: 85
    shuffle: False
    num_workers: 8
    prefetch_factor: 10
    persistent_workers: True # Important to avoid seeding at each epoch

model:
    # Embedding
    vocab_size: 50277
    position_embedding_type: "rotary"
    embedding_dropout_rate: 0.0
    share_embedding_weights: False

    # Decoder Block
    hidden_size: 2560
    num_heads: 32
    num_hidden_layers: 32
    max_position_embeddings: 2048
    attention_type: "scaled_dot_product"

    use_untied_layer_norm: True
    use_projection_bias_in_attention: True
    use_ffn_bias_in_attention: True
    use_ffn_bias: True

    filter_size: 10240
    nonlinearity: "gelu"
    attention_dropout_rate: 0.0
    residual_dropout_rate: 0.0

    rotary_dim: 80 # hidden_size / num_heads * rotary_pct(1.0), confirmed this with authors
    layer_norm_epsilon: 1.0e-5
    use_bias_in_output: False
    initializer_range: 0.02
    # We use truncated_normal instead of normal (ref: https://github.com/EleutherAI/gpt-neox) with the same std and mean for better performance.
    # We chose to align with Neox 20B for std
    embedding_initializer:
        name: "truncated_normal"
        mean: 0.0
        std: 0.0125 # sqrt(2 / (5 * hidden_size))

    initializer:
        name: "truncated_normal"
        mean: 0.0
        std: 0.0125 # sqrt(2 / (5 * hidden_size))

    output_layer_initializer:
        name: "truncated_normal"
        mean: 0.0
        std: 0.0012352647110032732 # 2 / num_hidden_layers / sqrt(hidden_size)

    mixed_precision: True
    precision_opt_level: 1

optimizer:
    optimizer_type: "adamw"
    beta1: 0.9
    beta2: 0.999
    eps: 1.0e-8
    weight_decay_rate: 0.0
    max_gradient_norm: 1.0
    correct_bias: True
    learning_rate:
        -   steps: 77101 # 1% of max_steps
            scheduler: "Linear"
            initial_learning_rate: 0.0
            end_learning_rate: 3.6e-5 # sqrt(85 / 2048) * 1.6e-4
        -   scheduler: "CosineDecay"
            initial_learning_rate: 3.6e-5
            decay_steps: 7633016 # 7710117 - 77101
            end_learning_rate: 3.6e-6 # (1.0 - 0.9) * 3.6e-5

runconfig:
    max_steps: 7710117 # 320000 * 2048 / 85
    log_steps: 100
    checkpoint_steps: 5000
    seed: 1

